plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id("io.github.gradle-nexus.publish-plugin") version '2.0.0'
    id "com.github.ben-manes.versions" version '0.51.0'
}

group = 'io.github.igrqb'
version = '0.5'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.github.jnr:jnr-ffi:2.2.17'
    implementation 'org.slf4j:slf4j-api:2.0.16'
    implementation 'ch.qos.logback:logback-classic:1.5.13'

    testImplementation platform('org.junit:junit-bom:5.11.4')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'commons-io:commons-io:2.18.0'
    testImplementation 'com.twelvemonkeys.imageio:imageio-batik:3.12.0'
    testImplementation 'org.apache.pdfbox:pdfbox:3.0.3'
    testImplementation 'org.apache.xmlgraphics:batik-transcoder:1.18'
    testImplementation 'org.bytedeco:javacv-platform:1.5.11'
    testImplementation 'org.bytedeco:opencv-platform:4.10.0-1.5.11'
}

test {
    useJUnitPlatform()
}

nexusPublishing {
    repositories {
        sonatype {  //only for users registered in Sonatype after 24 Feb 2021
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = 'jnr-graphviz'
                packaging = 'jar'
                // optionally artifactId can be defined here
                description = 'Java bindings for simple Graphviz commands using JNR'
                url = 'https://github.com/igrqb/jnr-graphviz'

                scm {
                    connection = 'scm:git:https://github.com/igrqb/jnr-graphviz.git'
                    developerConnection = 'scm:git:ssh:git@github.com:igrqb/jnr-graphviz.git'
                    url = 'https://github.com/igrqb/jnr-graphviz'
                }

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://mit-license.org/'
                    }
                }

                developers {
                    developer {
                        id = 'igrqb'
                        name = 'igrqb'
                        email = 'igrqb@duck.com'
                    }
                }
            }

            from components.java
        }
    }
}

signing {
    def signingKey = project.findProperty("gpgSigningKey")
    def signingPassword = project.findProperty("gpgSigningPass")

    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}